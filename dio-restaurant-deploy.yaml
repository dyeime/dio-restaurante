apiVersion: apps/v1
kind: Deployment
metadata:
  name: dio-waiter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dio-waiter
  template:
    metadata:
      labels:
        app: dio-waiter
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: dio-waiter
        image: felipetomino.azurecr.io/dio-waiter:latest
        command: ["yarn", "prod"]
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
        - name: KAFKA_BROKER_URI
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_BROKER_URI
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_USERNAME
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_PASSWORD
        - name: KAFKA_TOPIC_PREFIX
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_TOPIC_PREFIX
---
apiVersion: v1
kind: Service
metadata:
  name: dio-waiter
spec:
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  selector:
    app: dio-waiter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dio-cooker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dio-cooker
  template:
    metadata:
      labels:
        app: dio-cooker
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: dio-cooker
        image: felipetomino.azurecr.io/dio-kitchen:latest
        command: ["yarn", "prod"]
        env:
        - name: CONSUMER_TYPE
          value: "Cooker"
        - name: KAFKA_BROKER_URI
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_BROKER_URI
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_USERNAME
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_PASSWORD
        - name: KAFKA_TOPIC_PREFIX
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_TOPIC_PREFIX
---
apiVersion: v1
kind: Service
metadata:
  name: dio-cooker
spec:
  ports:
  - port: 4000
  selector:
    app: dio-cooker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dio-bartender
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dio-bartender
  template:
    metadata:
      labels:
        app: dio-bartender
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: dio-bartender
        image: felipetomino.azurecr.io/dio-kitchen:latest
        command: ["yarn", "prod"]
        env:
        - name: CONSUMER_TYPE
          value: "Bartender"
        - name: KAFKA_BROKER_URI
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_BROKER_URI
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_USERNAME
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_PASSWORD
        - name: KAFKA_TOPIC_PREFIX
          valueFrom:
            secretKeyRef:
              name: dio-restaurant-secret
              key: KAFKA_TOPIC_PREFIX
---
apiVersion: v1
kind: Service
metadata:
  name: dio-bartender
spec:
  ports:
  - port: 5000
  selector:
    app: dio-bartender